{"version":3,"sources":["components/Nav.js","components/firebaseConnect.js","components/Notes.js","components/Nothing.js","components/ListNotes.js","components/NoteForm.js","components/AlertInfo.js","components/App.js","serviceWorker.js","components/Store.js","index.js"],"names":["Nav","newNote","event","preventDefault","props","CHANGE_EDIT_STATUS","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-hidden","id","onClick","Component","connect","state","ownProps","dispatch","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dataNode","database","ref","Notes","whenClickToEdit","changeDisplayFromEdit","sendDataEditToStore","value","whenClickToDelete","sendDataDeleteToStore","changeDisplayAlert","role","this","data-parent","ftitle","style","disabled","fcontent","lastUpdate","isEdit","dataEdit","alertContent","Nothing","ListNotes","getData","datafireBase","length","map","key","on","values","arrData","forEach","ele","noteTitle","val","notefcontent","push","setState","aria-multiselectable","NewNote","isChange","name","target","addNote","addDataStore","updateDataOrAddnew","time","Date","toLocaleString","item","updateDataStore","changeDisplayFormEdit","onChange","placeholder","defaultValue","height","data","AlertInfo","handleDismiss","CHANGE_ALERT_OFF","alertShow","headline","onDismiss","timeout","App","dislayNewFormNote","React","Boolean","window","location","hostname","match","checkInput","dataCheck","undefined","NoteInitialState","store","createStore","action","child","update","remove","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32aa3dd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nclass Nav extends Component {\n    newNote = (event) => {\n        event.preventDefault();\n        this.props.CHANGE_EDIT_STATUS()\n    }\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"/\">Notes</a>\n                <button className=\"navbar-toggler d-lg-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"fa fa-bars\" aria-hidden=\"true\" /></button>\n                <div className=\"navbar-collapse justify-content-end collapse\" id=\"collapsibleNavId\">\n                    <ul className=\"navbar-nav mt-2 mt-lg-0\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item \">\n                            <a className=\"nav-link\" href=\"/newNote\" onClick={(event) => this.newNote(event)}>Thêm mới ghi chú</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {}\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        CHANGE_EDIT_STATUS: () => {\n            dispatch({ type: \"CHANGE_EDIT_STATUS\" })\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)","import firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBrApKBZBcrWt4ECKRi7t0JFYIYOFOZAoE\",\n    authDomain: \"notesreactjs-6b8c4.firebaseapp.com\",\n    databaseURL: \"https://notesreactjs-6b8c4.firebaseio.com\",\n    projectId: \"notesreactjs-6b8c4\",\n    storageBucket: \"notesreactjs-6b8c4.appspot.com\",\n    messagingSenderId: \"549882508650\",\n    appId: \"1:549882508650:web:6436a8db79446a1df82113\",\n    measurementId: \"G-0GDPTMPEKP\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n\nexport const dataNode = firebase.database().ref(\"dataForNode/\");\n// // xem data\n// data.once(\"value\").then((snapshot) => {\n//     const data = snapshot.val();\n//     console.log(data);\n// });\n//sua du lieu\n// data.set({\n//     id: 1,\n//     title: \"Ghi chu ngay 26-07-2020\",\n//     content: \"ghi chu da dc sua\"\n// })\n\n//them du lieu vao\n// data.push({\n//     title: \"Ghi chu so 3\",\n//     content: \"noi dung ghi chu so 3\"\n// })\n\n// xoa du lieu\n// data.child(\"-MFewwKhYIt4zHPmjsRP\").remove();","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nclass Notes extends Component {\n\n    whenClickToEdit = () => {\n        this.props.changeDisplayFromEdit();//thay doi trang thai display\n        this.props.sendDataEditToStore(this.props.value);\n    }\n    whenClickToDelete = () => {\n        this.props.sendDataDeleteToStore(this.props.value.id);\n        this.props.changeDisplayAlert(\"Xóa thành công\")\n    }\n    render() {\n        return (\n            <div className=\"card mb-2\">\n                <div className=\"card-header\" role=\"tab\" id={\"section1HeaderId\" + this.props.value.id}>\n                    <h5 className=\"mb-0\">\n                        <a data-toggle=\"collapse\" data-parent=\"#NoteList\" href={\"#noteContent1\" + this.props.value.id} aria-expanded=\"false\" aria-controls={\"noteContent1\" + this.props.value.id} className=\"collapsed title-fit\">\n                            {this.props.value.ftitle} </a>\n                    </h5>\n                </div>\n                <div id={\"noteContent1\" + this.props.value.id} className=\"in collapse\" role=\"tabpanel\" style={{}}>\n                    <div className=\"card border-primary\">\n                        <div className=\"card-body\">\n                            <p className=\"title-p title-fit\">{this.props.value.ftitle}</p>\n                            <div className=\"btn btn-group float-right m-0 p-0\">\n                                <button onClick={() => { this.whenClickToEdit() }} className=\"btn btn-outline-info\">Sửa</button>\n                                <button onClick={() => { this.whenClickToDelete() }} disabled className=\"btn btn-outline-warning\">Xóa</button>\n                            </div>\n                            <div>\n                                {this.props.value.fcontent}\n                            </div>\n                            <div className=\"last-update\">\n                                {\"Cập nhật lần cuối - \" + this.props.value.lastUpdate}\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isEdit: state.isEdit\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeDisplayFromEdit: () => {\n            dispatch({ type: \"CHANGE_EDIT_STATUS\" })\n        },\n        sendDataEditToStore: (dataEdit) => {\n            dispatch({ type: \"SEND_DATA_EDIT_TO_STORE\", dataEdit })\n        },\n        sendDataDeleteToStore: (id) => {\n            dispatch({ type: \"DELETE_NOTE\", id })\n        },\n        changeDisplayAlert: (alertContent) => {\n            dispatch({ type: \"CHANGE_ALERT_ON\", alertContent })\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes)\n","import React, { Component } from 'react';\n\nclass Nothing extends Component {\n    render() {\n        return (\n            <div className=\"nothing\">\n                <span>Chưa có ghi chú nào.</span>\n                <span>Hãy thêm mới</span>\n            </div>\n        );\n    }\n}\n\nexport default Nothing;","import React, { Component } from 'react';\nimport { dataNode } from \"./firebaseConnect\"\nimport Notes from './Notes';\nimport Nothing from './Nothing';\nclass ListNotes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datafireBase: []\n        }\n    }\n\n    componentDidMount() {\n        dataNode.on(\"value\", (values) => {\n            const arrData = []\n            values.forEach(ele => {\n                const key = ele.key;\n                const noteTitle = ele.val().ftitle;\n                const notefcontent = ele.val().fcontent;\n                const lastUpdate = ele.val().lastUpdate;\n                arrData.push({\n                    id: key,\n                    ftitle: noteTitle,\n                    fcontent: notefcontent,\n                    lastUpdate: lastUpdate\n                })\n\n            });\n            this.setState({ datafireBase: arrData })\n\n        })\n    }\n\n    getData = () => {\n        if (this.state.datafireBase) {\n            if (!this.state.datafireBase.length)\n                return <Nothing />\n            else\n                return this.state.datafireBase.map((value, key) => {\n                    return (\n                        <Notes key={key} value={value} />\n                    )\n                })\n        }\n    }\n    render() {\n        return (\n\n            < div className=\"col-sm col-xs-12 sangphai\">\n                <div id=\"NoteList\" role=\"tablist\" aria-multiselectable=\"true\">\n                    {this.getData()}\n\n                </div >\n            </div >\n\n        );\n    }\n}\n\nexport default ListNotes;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nclass NewNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ftitle: \"\",\n            fcontent: \"\",\n            time: \"\"\n        }\n    }\n    componentWillMount() {\n        if (this.props.dataEdit.id) {\n            this.setState({\n                ftitle: this.props.dataEdit.ftitle,\n                fcontent: this.props.dataEdit.fcontent,\n                id: this.props.dataEdit.id\n            })\n        }\n    }\n    // kiem tra thay doi o form \n    isChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n    //new note moi\n    addNote = () => {\n        this.props.addDataStore(this.state)\n        this.setState({\n            ftitle: \"\",\n            fcontent: \"\"\n        })\n    }\n    updateDataOrAddnew = (event) => {\n        const lastUpdate = new Date();\n        var time = lastUpdate.toLocaleString();\n        this.setState({ time: time })\n        if (this.state.id) {\n            //update data\n            const item = {\n                id: this.state.id,\n                ftitle: this.state.ftitle,\n                fcontent: this.state.fcontent,\n                lastUpdate: time\n            }\n            this.props.changeDisplayAlert(\"Sửa thành công\")\n            this.props.updateDataStore(item)\n            this.props.changeDisplayFormEdit();\n\n        }\n        else {\n            //them moi du lieu\n            const item = {\n                ftitle: this.state.ftitle,\n                fcontent: this.state.ftitle,\n                lastUpdate: time\n            }\n            this.props.changeDisplayAlert(\"Thêm thành công\")\n            this.props.addDataStore(item);\n            this.props.changeDisplayFormEdit();//dong form\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"sangtrai col-sm col-xs-12\">\n                <form>\n                    <div className=\"card \">\n                        <h4 className=\"card-header\">{this.state.id ? 'Sửa ghi chú ' : 'Thêm ghi chú'}</h4>\n                        <div className=\"form-group m-2\">\n                            <label> {this.state.id ? 'Sửa tiêu đề ' : 'Thêm tiêu đề'}</label>\n                            <input onChange={(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"ftitle\" placeholder=\"Tiêu để notes\" defaultValue={this.props.dataEdit.ftitle}\n                                disabled={this.state.id ? 'disabled' : ''} />\n                        </div>\n                        <div className=\"form-group m-2\">\n                            <label>Điền nội dung vào đây</label>\n                            <textarea onChange={(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"fcontent\" placeholder=\"Tiêu để notes\" style={{ height: '30vh' }} defaultValue={this.props.dataEdit.fcontent}>\n                            </textarea>\n                        </div>\n                    </div>\n                    <button type=\"reset\" name=\"fsave\" id=\"fsave\"\n                        onClick={(event) => this.updateDataOrAddnew(event)} className=\"btn btn-primary btn-lg btn-block\">{this.state.id ? 'Cập nhật ' : 'Thêm mới'}</button>\n                </form>\n            </div >\n\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        dataEdit: state.dataEdit\n\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        addDataStore: (data) => {\n            dispatch({ type: \"ADD_DATA\", data: data })\n        },\n        updateDataStore: (data) => {\n            dispatch({ type: \"UPDATE_DATA\", data: data })\n        },\n        changeDisplayFormEdit: () => {\n            dispatch({ type: \"CHANGE_EDIT_STATUS\" })\n        },\n        changeDisplayAlert: (alertContent) => {\n            dispatch({ type: \"CHANGE_ALERT_ON\", alertContent })\n        },\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNote)","import React, { Component } from 'react';\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\nimport { connect } from \"react-redux\"\nclass AlertInfo extends Component {\n    handleDismiss = () => {\n        this.props.CHANGE_ALERT_OFF();\n    }\n    render() {\n        if (!this.props.alertShow) return null;\n        return (\n            <AlertContainer>\n                <Alert type=\"success\" headline=\"Thông báo\" onDismiss={() => this.handleDismiss()} timeout={2000}>{this.props.alertContent}</Alert>\n            </AlertContainer>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        alertShow: state.alertShow,\n        alertContent: state.alertContent\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        CHANGE_ALERT_OFF: () => {\n            dispatch({ type: \"CHANGE_ALERT_OFF\" })\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertInfo)\n","import React from 'react';\nimport { connect } from \"react-redux\"\n\nimport Nav from './Nav';\nimport ListNotes from './ListNotes';\nimport NewNote from './NoteForm';\nimport AlertInfo from './AlertInfo';\nclass App extends React.Component {\n\n  dislayNewFormNote = () => {\n    if (this.props.isEdit) {\n      return (<NewNote />)\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Nav />\n        <AlertInfo />\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n            <ListNotes />\n            {this.dislayNewFormNote()}\n          </div></div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isEdit: state.isEdit,\n\n  }\n}\nexport default connect(mapStateToProps)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { dataNode } from \"./firebaseConnect\"\nimport { createStore } from \"redux\"\n\n\n// dataNode.once(\"value\").then((snapshot) => data = snapshot.val());\n\nconst checkInput = (dataCheck) => {\n    switch (dataCheck) {\n        case undefined:\n            return 0;\n        case null:\n            return 0;\n        case \"\":\n            return 0;\n        default:\n            return 1;\n    }\n}\nconst NoteInitialState = {\n    isEdit: false,\n    alertShow: false,\n    dataEdit: {}\n}\nconst allReducer = (state = NoteInitialState, action) => {\n    switch (action.type) {\n        case \"ADD_DATA\":\n            if (checkInput(action.data.ftitle) !== 0 && checkInput(action.data.fcontent)) {\n                dataNode.push(action.data)\n            }\n            else {\n                return { ...state, alertShow: true, alertContent: \"Không thêm mới được gì....\" }\n            }\n            return state;\n        case \"UPDATE_DATA\":\n\n            if (checkInput(action.data.ftitle) !== 0 && checkInput(action.data.fcontent)) {\n                // dataNode.push(action.data)\n                dataNode.child(action.data.id).update({\n                    ftitle: action.data.ftitle,\n                    fcontent: action.data.fcontent,\n                    lastUpdate: action.data.lastUpdate,\n                })\n            }\n            else {\n                return { ...state, alertShow: true, alertContent: \"Không thêm mới được gì....\" }\n            }\n            return { ...state, dataEdit: action.data };\n        case \"CHANGE_EDIT_STATUS\":\n            return { ...state, isEdit: !state.isEdit }\n\n        case \"CHANGE_ALERT_ON\":\n            return { ...state, alertShow: true, alertContent: action.alertContent }\n        case \"CHANGE_ALERT_OFF\":\n            return { ...state, alertShow: false }\n\n        case \"SEND_DATA_EDIT_TO_STORE\":\n            return { ...state, dataEdit: action.dataEdit };\n\n        case \"DELETE_NOTE\":\n            dataNode.child(action.id).remove();\n            // return { ...state, dataEdit: state.dataEdit.filter(x => x.id !== action.id) };\n            return state\n\n        default:\n            return state\n    }\n}\n\n\n\nconst store = createStore(allReducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from \"./components/Store\"\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}